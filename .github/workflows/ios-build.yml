name: iOS Framework Build

on:
  push:
    branches: [ master ]
    paths:
      - 'code/mobile/ios/**'
  pull_request:
    branches: [ master ]
    paths:
      - 'code/mobile/ios/**'
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: macos-latest  # 使用最新的 macOS 运行器
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.0'  # 使用最新的稳定版本
    
    - name: Install Xcode Command Line Tools
      run: |
        xcode-select --install || true
        sudo xcode-select --switch /Applications/Xcode.app
    
    - name: Setup Go environment
      run: |
        echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
        go env
    
    - name: Setup Go module
      run: |
        cd code/mobile/ios
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        
        if [ ! -f go.mod ]; then
          echo "Initializing new Go module..."
          go mod init shiledp2p/mobile/ios
        else
          echo "Using existing go.mod file"
          cat go.mod
        fi
        
        echo "Adding gomobile dependencies..."
        go get golang.org/x/mobile/cmd/gomobile@latest
        go get golang.org/x/mobile/cmd/gobind@latest
        go get golang.org/x/mobile/bind@latest
        go mod tidy
        
        echo "Updated go.mod contents:"
        cat go.mod
    
    - name: Install gomobile
      run: |
        cd code/mobile/ios
        echo "Installing gomobile tools..."
        go install golang.org/x/mobile/cmd/gomobile@latest
        go install golang.org/x/mobile/cmd/gobind@latest
        
        echo "Initializing gomobile..."
        gomobile init -v
        
        echo "Verifying gomobile installation..."
        gomobile version
    
    - name: Verify gomobile installation
      run: |
        cd code/mobile/ios
        echo "Checking gomobile tools..."
        which gomobile
        which gobind
        
        echo "Checking gomobile version..."
        gomobile version
        
        echo "Checking bind package..."
        go list -f '{{.Dir}}' golang.org/x/mobile/bind
        
        echo "Listing all dependencies..."
        go list -m all
    
    - name: Download dependencies
      run: |
        cd code/mobile/ios
        echo "Downloading dependencies..."
        go mod download
        go mod tidy
        
        echo "Verifying dependencies..."
        go list -m all
    
    - name: Build iOS Framework
      run: |
        cd code/mobile/ios
        echo "Building iOS framework..."
        chmod +x build.sh
        ./build.sh
    
    - name: Upload Framework
      uses: actions/upload-artifact@v4
      with:
        name: SimpleDemo.xcframework
        path: code/mobile/ios/SimpleDemo.xcframework
        if-no-files-found: error 